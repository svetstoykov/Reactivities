/* eslint-disable @typescript-eslint/no-unused-vars */
import { Form, Formik } from "formik";
import { observer } from "mobx-react-lite";
import { Button, Container, Divider, Header, Label } from "semantic-ui-react";
import ReactivitiesTextArea from "../../app/common/form/ReactivitiesTextArea";
import ReactivitiesTextInput from "../../app/common/form/ReactivitiesTextInput";
import { useStore } from "../../app/stores/store";
import { ProfileApiModel } from "../../autogenerated/a-p-i/profiles/profile-api-model";

function ProfileDetailsEditForm() {
    const { profileStore } = useStore();

    function handleFormSubmit(profile: ProfileApiModel) {
        profileStore.updateDetails(profile).then(() => profileStore.setEditDetailsMode(false));
    }

    return (
        <>
            <Header
                icon="user"
                as="h3"
                content={`About ${profileStore.currentProfile?.displayName}`}
                style = {{paddingBottom: '25px'}}
            />
            {profileStore.editDetailsMode ? (
                <Formik
                    enableReinitialize
                    initialValues={profileStore.currentProfile!}
                    onSubmit={(values) => handleFormSubmit(values)}>
                    {({ handleSubmit, isValid, isSubmitting, dirty }) => (
                        <Form className="ui form" onSubmit={handleSubmit} autoComplete="off">
                            <ReactivitiesTextInput
                                placeholder={"Display Name"}
                                name={"displayName"}
                                label={"Display Name"}
                            />
                            <ReactivitiesTextInput
                                placeholder={"Email"}
                                name={"email"}
                                label={"Email"}
                            />
                            <ReactivitiesTextArea
                                placeholder={"Bio"}
                                name={"bio"}
                                rows={3}
                                label={"Bio"}
                            />
                            <Button loading={profileStore.loading} type="submit" positive>
                                Submit
                            </Button>
                            <Button
                                disabled={profileStore.loading}
                                onClick={() => profileStore.setEditDetailsMode(false)}>
                                Cancel
                            </Button>
                        </Form>
                    )}
                </Formik>
            ) : (
                <div>
                    <Container>
                        <Header as="h4" content="Email" />
                        <Divider />
                        <p>
                            {profileStore.currentProfile?.email}
                        </p>
                        <Header as="h4" content="Bio" />
                        <Divider />
                        <p
                            style={{
                                fontStyle: profileStore.currentProfile?.bio ? "normal" : "italic",
                            }}>
                            {profileStore.currentProfile?.bio ||
                                "Tell us something about yourself...."}
                        </p>
                    </Container>
                    <Button
                        style={{ marginTop: "20px" }}
                        content="Edit Profile"
                        onClick={() => profileStore.setEditDetailsMode(true)}
                    />
                </div>
            )}
        </>
    );
}

export default observer(ProfileDetailsEditForm);
