import { ChangeEvent, useState } from "react";
import { Button, Form, Segment } from "semantic-ui-react";
import { useStore } from "../../../app/stores/store";
import { ActivityViewModel } from "../../../autogenerated/a-p-i/models/activities/response/activity-view-model";

interface Props {
    createOrEdit: (activity: ActivityViewModel) => void;
    submitting: boolean;
}

export default function ActivityForm(props: Props) {
    const { activityStore } = useStore();
    const initialState =
        activityStore.selectedActivity ?? new ActivityViewModel();

    const [activity, setActivity] = useState(initialState);

    function handleSubmit() {
        props.createOrEdit(activity);
    }

    function handleInputChange(
        event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
    ) {
        const { name, value } = event.target;
        setActivity({ ...activity, [name]: value });
    }

    return (
        <Segment clearing>
            <Form onSubmit={handleSubmit} autoComplete="off">
                <Form.Input
                    placeholder="Title"
                    value={activity?.title}
                    name="title"
                    onChange={handleInputChange}
                />
                <Form.TextArea
                    placeholder="Description"
                    value={activity?.description}
                    name="description"
                    onChange={handleInputChange}
                />
                <Form.Input
                    placeholder="Category"
                    value={activity?.category}
                    name="category"
                    onChange={handleInputChange}
                />
                <Form.Input
                    type="date"
                    placeholder="Date"
                    value={activity?.date}
                    name="date"
                    onChange={handleInputChange}
                />
                <Form.Input
                    placeholder="City"
                    value={activity?.city}
                    name="city"
                    onChange={handleInputChange}
                />
                <Form.Input
                    placeholder="Venue"
                    value={activity?.venue}
                    name="venue"
                    onChange={handleInputChange}
                />
                <Button
                    loading={props.submitting}
                    floated="right"
                    positive
                    type="submit"
                    content="Submit"
                />
                <Button
                    onClick={activityStore.closeForm}
                    floated="right"
                    type="submit"
                    color="red"
                    content="Cancel"
                />
            </Form>
        </Segment>
    );
}
