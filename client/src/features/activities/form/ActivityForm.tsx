import { ChangeEvent, useState } from "react";
import { Button, Form, Segment } from "semantic-ui-react";
import { ActivityResponse as Activity } from "../../../autogenerated/models/activities/response/activity-response";

interface Props {
    closeForm: () => void;
    activity: Activity | undefined;
    createOrEdit: (activity: Activity) => void;
}

export default function ActivityForm(props: Props) {

    const initialState = props.activity ?? new Activity();

    const [activity, setActivity] = useState(initialState);

    function handleSubmit() {
        props.createOrEdit(activity);
    }

    function handleInputChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {
        const { name, value } = event.target;
        setActivity({ ...activity, [name]: value });
    }

    return (
        <Segment clearing>
            <Form onSubmit={handleSubmit} autoComplete='off'>
                <Form.Input placeholder='Title' value={props.activity?.title} name='title' onChange={handleInputChange} />
                <Form.TextArea placeholder='Description' value={props.activity?.description} name='description' onChange={handleInputChange} />
                <Form.Input placeholder='Category' value={props.activity?.category} name='category' onChange={handleInputChange} />
                <Form.Input type='date' placeholder='Date' value={props.activity?.date} name='date' onChange={handleInputChange} />
                <Form.Input placeholder='City' value={props.activity?.city} name='city' onChange={handleInputChange} />
                <Form.Input placeholder='Venue' value={props.activity?.venue} name='venue' onChange={handleInputChange} />
                <Button floated='right' positive type='submit' content='Submit' />
                <Button onClick={props.closeForm} floated='right' type='submit' color='red' content='Cancel' />
            </Form>
        </Segment>
    )
}