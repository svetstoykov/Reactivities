import React from "react";
import { Link } from "react-router-dom";
import { Button, Icon, Item, Label, Segment } from "semantic-ui-react";
import { ActivityApiModel } from "../../../autogenerated/a-p-i/activities/activity-api-model";
import { format } from "date-fns";
import { reactivitiesDateTimeFormat } from "../../../app/common/constants/GlobalConstants";
import ActivityListItemAttendee from "./ActivityListItemAttendees";
import { useStore } from "../../../app/stores/store";

interface Props {
    activity: ActivityApiModel;
}

export default function ActivityListItem({ activity }: Props) {
    const { profileStore } = useStore();

    return (
        <Segment.Group>
            {activity.isCancelled && <Label attached="top" color="red" content="Cancelled" />}
            <Segment>
                <Item.Group>
                    <Item>
                        <Item.Image
                            style={{ marginBottom: 5 }}
                            size="tiny"
                            circular
                            src="/assets/user.png"
                        />
                        <Item.Content>
                            <Item.Header as={Link} to={`/activities/${activity.id}`}>
                                {activity.title}
                            </Item.Header>
                            <Item.Description>
                                Hosted by{" "}
                                <strong>
                                    <Link to={`/profiles/${activity.host.username}`}>
                                        {activity.host.displayName}
                                    </Link>
                                </strong>
                            </Item.Description>
                            {profileStore.isActivityHost(activity.host.username) && (
                                <Item.Description>
                                    <Label basic color="orange">
                                        You are hosting this activity
                                    </Label>
                                </Item.Description>
                            )}
                            {profileStore.isGoingToActivity(activity.id!) && (
                                <Item.Description>
                                    <Label basic color="green">
                                        You are going to this activity
                                    </Label>
                                </Item.Description>
                            )}
                        </Item.Content>
                    </Item>
                </Item.Group>
            </Segment>
            <Segment>
                <span>
                    <Icon name="clock" /> {format(activity.date, reactivitiesDateTimeFormat)}
                    <Icon name="marker" /> {activity.venue}
                </span>
            </Segment>
            <Segment secondary>
                <ActivityListItemAttendee attendees={activity.attendees} />
            </Segment>
            <Segment clearing>
                <span>{activity.description}</span>
                <Button
                    as={Link}
                    to={`/activities/${activity.id}`}
                    color="teal"
                    floated="right"
                    content="View"
                />
            </Segment>
        </Segment.Group>
    );
}
