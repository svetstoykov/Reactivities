import { observer } from "mobx-react-lite";
import React from "react";
import Calendar from "react-calendar";
import { Header, Menu } from "semantic-ui-react";
import { useStore } from "../../../app/stores/store";
import { ActivityAttendingFilterType } from "../../../autogenerated/application/activities/enums/activity-attending-filter-type.enum";

function ActivityFilters() {
    const { activityStore } = useStore();

    return (
        <>
            <Menu vertical size="large" style={{ width: "100%", marginTop: 25 }}>
                <Header icon="filter" attached color="teal" content="Fitlers" />
                <Menu.Item
                    content="All Activities"
                    active={
                        activityStore.activityListInputModel.attending ===
                        ActivityAttendingFilterType.AllActivities
                    }
                    onClick={() =>
                        activityStore.setActivityListAttendingFilter(
                            ActivityAttendingFilterType.AllActivities
                        )
                    }
                />
                <Menu.Item
                    content="I'm going"
                    active={
                        activityStore.activityListInputModel.attending ===
                        ActivityAttendingFilterType.ImGoing
                    }
                    onClick={() =>
                        activityStore.setActivityListAttendingFilter(
                            ActivityAttendingFilterType.ImGoing
                        )
                    }
                />
                <Menu.Item
                    content="I'm hosting"
                    active={
                        activityStore.activityListInputModel.attending ===
                        ActivityAttendingFilterType.ImHosting
                    }
                    onClick={() =>
                        activityStore.setActivityListAttendingFilter(
                            ActivityAttendingFilterType.ImHosting
                        )
                    }
                />
            </Menu>
            <Header />
            <Calendar
                onChange={(date: Date) => {
                    if (date.toISOString() === activityStore.activityListInputModel.startDate?.toISOString()) {
                        activityStore.setActivityStartDateFilter(undefined);
                        return;
                    }
                    activityStore.setActivityStartDateFilter(date);
                }}
                value={activityStore.activityListInputModel.startDate || new Date()}
            />
        </>
    );
}

export default observer(ActivityFilters);
