import { makeAutoObservable } from "mobx";
import { ProfileApiModel } from "../../autogenerated/a-p-i/profiles/models/profile-api-model";
import agent from "../api/agent";
import { store } from "./store";

export default class ProfileStore{
    private profile: ProfileApiModel | null = null;

    constructor() {
        makeAutoObservable(this)        
    }

    get currentProfile() {
        return this.profile
    }

    get isLoggedIn() {
        return !!this.profile
    }

    setProfile = (profile: ProfileApiModel | null) => {
        this.profile = profile
    }

    loadCurrentProfile = async () => {
        try {
            const profile = await agent.Profiles.getCurrent();

            this.setProfile(profile)
        } catch(error){
            console.log(error);
        }
    }

    isActivityHost = (activityHostUsername: string | undefined) => {
        return this.profile?.username === activityHostUsername;
    };

    isGoingToActivity = (activityId: number) => {
        return store.activityStore.activitiesRegistry.get(activityId)
            ?.attendees.some((a) => a.username === this.profile?.username);
    };
}